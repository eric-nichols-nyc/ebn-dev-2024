exports.id=114,exports.ids=[114],exports.modules={8:(t,e,r)=>{"use strict";r.d(e,{fileFromPath:()=>w});var i,o,s=r(7147),a=r(1017),n=r(6390),c=r.n(n),l=r(9);let d=t=>Object.prototype.toString.call(t).slice(8,-1).toLowerCase(),f=function(t){if("object"!==d(t))return!1;let e=Object.getPrototypeOf(t);return null==e||(e.constructor&&e.constructor.toString())===Object.toString()};r(7301);var h=function(t,e,r,i,o){if("m"===i)throw TypeError("Private method is not writable");if("a"===i&&!o)throw TypeError("Private accessor was defined without a setter");if("function"==typeof e?t!==e||!o:!e.has(t))throw TypeError("Cannot write private member to an object whose class did not declare it");return"a"===i?o.call(t,r):o?o.value=r:e.set(t,r),r},u=function(t,e,r,i){if("a"===r&&!i)throw TypeError("Private accessor was defined without a getter");if("function"==typeof e?t!==e||!i:!e.has(t))throw TypeError("Cannot read private member from an object whose class did not declare it");return"m"===r?i:"a"===r?i.call(t):i?i.value:e.get(t)};class p{constructor(t){i.set(this,void 0),o.set(this,void 0),h(this,i,t.path,"f"),h(this,o,t.start||0,"f"),this.name=(0,a.basename)(u(this,i,"f")),this.size=t.size,this.lastModified=t.lastModified}slice(t,e){return new p({path:u(this,i,"f"),lastModified:this.lastModified,size:e-t,start:t})}async *stream(){let{mtimeMs:t}=await s.promises.stat(u(this,i,"f"));if(t>this.lastModified)throw new(c())("The requested file could not be read, typically due to permission problems that have occurred after a reference to a file was acquired.","NotReadableError");this.size&&(yield*(0,s.createReadStream)(u(this,i,"f"),{start:u(this,o,"f"),end:u(this,o,"f")+this.size-1}))}get[(i=new WeakMap,o=new WeakMap,Symbol.toStringTag)](){return"File"}}async function w(t,e,r){let i=await s.promises.stat(t);return function(t,{mtimeMs:e,size:r},i,o={}){let s;f(i)?[o,s]=[i,void 0]:s=i;let a=new p({path:t,size:r,lastModified:e});return s||(s=a.name),new l.$([a],s,{...o,lastModified:a.lastModified})}(t,i,e,r)}},6390:(t,e,r)=>{/*! node-domexception. MIT License. Jimmy WÃ¤rting <https://jimmy.warting.se/opensource> */if(!globalThis.DOMException)try{let{MessageChannel:t}=r(1267),e=new t().port1,i=new ArrayBuffer;e.postMessage(i,[i,i])}catch(t){"DOMException"===t.constructor.name&&(globalThis.DOMException=t.constructor)}t.exports=globalThis.DOMException}};